{% import "../macros.njk" as m -%}
{% set catalog = (readFile('../release-catalog.json') | fromJson) -%}
{% set service_def = catalog.services.qdrant -%}
# ═════════════════════════════════════════════════════════════════════════════
# 🗄️  {{ service_def.name }} v{{ service_def.version }}
# Release: {{ catalog.release.version }}
# {{ service_def.notes }}
# Conditionally enabled when: openwebui.providers.vector_db == "qdrant"
# ═════════════════════════════════════════════════════════════════════════════

[Unit]
Description={{ infrastructure.services.qdrant.description }}
After=network-online.target {{ infrastructure.network.name }}.network.service
Requires={{ infrastructure.network.name }}.network.service

[Container]
Image={{ service_def.image }}
AutoUpdate=registry
ContainerName={{ infrastructure.services.qdrant.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK
# ═════════════════════════════════════════════════════════════════════════════
Network={{ infrastructure.network.name }}.network

# ═════════════════════════════════════════════════════════════════════════════
# 📍 PUBLISHED PORT (for Caddy to access dashboard)
# ═════════════════════════════════════════════════════════════════════════════
{{ m.publishPort(infrastructure.services.qdrant) }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUME - Persistent storage for vector data
# ═════════════════════════════════════════════════════════════════════════════
{{ m.volumeMount(infrastructure.services.qdrant.volume, "/qdrant/storage") }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌍 ENVIRONMENT - Configuration
# ═════════════════════════════════════════════════════════════════════════════

# Disable telemetry (privacy first)
Environment=QDRANT__TELEMETRY_DISABLED=true

# Logging
Environment=QDRANT__LOG_LEVEL=INFO

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=timeout 3s bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
HealthInterval=30s
HealthTimeout=5s
HealthRetries=3
HealthStartPeriod=20s

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
{{ m.serviceSection(timeout=900) }}

[Install]
# No WantedBy - dependencies via After/Requires
