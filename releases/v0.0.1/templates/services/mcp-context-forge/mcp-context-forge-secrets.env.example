# ═════════════════════════════════════════════════════════════════════════════
# MCP Context Forge - Secrets Configuration
# ═════════════════════════════════════════════════════════════════════════════
#
# IMPORTANT: This is an EXAMPLE file. Copy it to:
#   ~/.config/mcp-context-forge/secrets.env
#
# Then generate real secrets and configure your values.
#
# SECURITY:
#   - NEVER commit this file with real secrets to version control!
#   - Set restrictive permissions: chmod 600 secrets.env
#   - Use strong, randomly generated secrets
#   - Rotate secrets periodically
#
# ═════════════════════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────────────────────
# REQUIRED: JWT Authentication
# ─────────────────────────────────────────────────────────────────────────────
# Generate with: openssl rand -hex 32
JWT_SECRET_KEY=REPLACE_WITH_RANDOM_64_CHAR_HEX_STRING

# ─────────────────────────────────────────────────────────────────────────────
# REQUIRED: Admin Passwords
# ─────────────────────────────────────────────────────────────────────────────
# Generate with: openssl rand -base64 24
ADMIN_PASSWORD=REPLACE_WITH_STRONG_PASSWORD
BASIC_AUTH_PASSWORD=REPLACE_WITH_STRONG_PASSWORD
PLATFORM_ADMIN_PASSWORD=REPLACE_WITH_STRONG_PASSWORD

# ─────────────────────────────────────────────────────────────────────────────
# REQUIRED: Auth Encryption Secret
# ─────────────────────────────────────────────────────────────────────────────
# Used to encrypt stored OAuth credentials and sensitive data
# Generate with: openssl rand -hex 32
AUTH_ENCRYPTION_SECRET=REPLACE_WITH_RANDOM_64_CHAR_HEX_STRING

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: Database Password (if using PostgreSQL/MariaDB)
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if database != "sqlite" in blueprint-config.json
# DB_PASSWORD=your-secure-db-password

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - GitHub OAuth
# ─────────────────────────────────────────────────────────────────────────────
# Create OAuth App: https://github.com/settings/developers
# SSO_GITHUB_ENABLED=true
# SSO_GITHUB_CLIENT_ID=your-github-oauth-client-id
# SSO_GITHUB_CLIENT_SECRET=your-github-oauth-client-secret
# SSO_GITHUB_ADMIN_ORGS=["your-org"]  # Optional: Auto-admin for org members

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - Google OAuth
# ─────────────────────────────────────────────────────────────────────────────
# Create OAuth Client: https://console.cloud.google.com/apis/credentials
# SSO_GOOGLE_ENABLED=true
# SSO_GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# SSO_GOOGLE_CLIENT_SECRET=your-google-client-secret
# SSO_GOOGLE_ADMIN_DOMAINS=["yourdomain.com"]  # Optional: Auto-admin for domain

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - Microsoft Entra ID (Azure AD)
# ─────────────────────────────────────────────────────────────────────────────
# Register App: https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps
# SSO_ENTRA_ENABLED=true
# SSO_ENTRA_CLIENT_ID=your-entra-client-id
# SSO_ENTRA_CLIENT_SECRET=your-entra-client-secret
# SSO_ENTRA_TENANT_ID=your-tenant-id

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - Keycloak
# ─────────────────────────────────────────────────────────────────────────────
# SSO_KEYCLOAK_ENABLED=true
# SSO_KEYCLOAK_BASE_URL=https://keycloak.example.com
# SSO_KEYCLOAK_REALM=master
# SSO_KEYCLOAK_CLIENT_ID=mcp-gateway
# SSO_KEYCLOAK_CLIENT_SECRET=your-keycloak-client-secret
# SSO_KEYCLOAK_MAP_REALM_ROLES=true
# SSO_KEYCLOAK_MAP_CLIENT_ROLES=false

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - IBM Security Verify
# ─────────────────────────────────────────────────────────────────────────────
# SSO_IBM_VERIFY_ENABLED=true
# SSO_IBM_VERIFY_CLIENT_ID=your-ibm-verify-client-id
# SSO_IBM_VERIFY_CLIENT_SECRET=your-ibm-verify-client-secret
# SSO_IBM_VERIFY_ISSUER=https://verify.example.com

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - Okta
# ─────────────────────────────────────────────────────────────────────────────
# SSO_OKTA_ENABLED=true
# SSO_OKTA_CLIENT_ID=your-okta-client-id
# SSO_OKTA_CLIENT_SECRET=your-okta-client-secret
# SSO_OKTA_ISSUER=https://your-domain.okta.com

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: SSO - Generic OIDC (Auth0, Authentik, etc.)
# ─────────────────────────────────────────────────────────────────────────────
# SSO_GENERIC_ENABLED=true
# SSO_GENERIC_PROVIDER_ID=auth0  # or authentik, etc.
# SSO_GENERIC_DISPLAY_NAME=My SSO Provider
# SSO_GENERIC_CLIENT_ID=your-generic-client-id
# SSO_GENERIC_CLIENT_SECRET=your-generic-client-secret
# SSO_GENERIC_AUTHORIZATION_URL=https://...
# SSO_GENERIC_TOKEN_URL=https://...
# SSO_GENERIC_USERINFO_URL=https://...
# SSO_GENERIC_ISSUER=https://...
# SSO_GENERIC_SCOPE=openid profile email

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: LLM Chat - OpenAI
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if llmchat_enabled=true and llm_provider="openai"
# OPENAI_API_KEY=sk-...
# OPENAI_MODEL=gpt-4o-mini
# OPENAI_BASE_URL=  # Optional: for OpenAI-compatible APIs
# OPENAI_TEMPERATURE=0.7
# OPENAI_MAX_RETRIES=2

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: LLM Chat - Anthropic Claude
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if llmchat_enabled=true and llm_provider="anthropic"
# ANTHROPIC_API_KEY=sk-ant-...
# ANTHROPIC_MODEL=claude-3-5-sonnet-20241022
# ANTHROPIC_TEMPERATURE=0.7
# ANTHROPIC_MAX_TOKENS=4096
# ANTHROPIC_MAX_RETRIES=2

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: LLM Chat - Azure OpenAI
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if llmchat_enabled=true and llm_provider="azure_openai"
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_KEY=your-azure-openai-key
# AZURE_OPENAI_DEPLOYMENT=gpt-4
# AZURE_OPENAI_API_VERSION=2024-02-15-preview
# AZURE_OPENAI_TEMPERATURE=0.7
# AZURE_OPENAI_MAX_TOKENS=4096

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: LLM Chat - AWS Bedrock
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if llmchat_enabled=true and llm_provider="aws_bedrock"
# AWS_BEDROCK_MODEL_ID=anthropic.claude-v2
# AWS_BEDROCK_REGION=us-east-1
# AWS_BEDROCK_TEMPERATURE=0.7
# AWS_BEDROCK_MAX_TOKENS=4096
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_SESSION_TOKEN=  # Optional: for temporary credentials

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: LLM Chat - Ollama
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if llmchat_enabled=true and llm_provider="ollama"
# OLLAMA_BASE_URL=http://localhost:11434
# OLLAMA_MODEL=llama3.2
# OLLAMA_TEMPERATURE=0.7

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: Observability - OpenTelemetry
# ─────────────────────────────────────────────────────────────────────────────
# Only needed if observability_enabled=true
# OTEL_EXPORTER_OTLP_ENDPOINT=http://phoenix:4317  # or jaeger:4317
# OTEL_EXPORTER_OTLP_HEADERS=  # Optional: authentication headers
# OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
# OTEL_EXPORTER_ZIPKIN_ENDPOINT=http://zipkin:9411/api/v2/spans

# ─────────────────────────────────────────────────────────────────────────────
# OPTIONAL: Additional Security
# ─────────────────────────────────────────────────────────────────────────────
# Custom allowed origins (JSON array)
# ALLOWED_ORIGINS=["https://app.example.com","https://admin.example.com"]

# CORS credentials
# CORS_ALLOW_CREDENTIALS=true

# Well-known files
# WELL_KNOWN_SECURITY_TXT=Contact: security@example.com\nExpires: 2026-12-31T23:59:59Z

# ─────────────────────────────────────────────────────────────────────────────
# GENERATION COMMANDS
# ─────────────────────────────────────────────────────────────────────────────
# Generate secrets with these commands:
#
# JWT_SECRET_KEY=$(openssl rand -hex 32)
# ADMIN_PASSWORD=$(openssl rand -base64 24)
# AUTH_ENCRYPTION_SECRET=$(openssl rand -hex 32)
#
# For asymmetric JWT (RS256/ES256):
# mkdir -p ~/.config/mcp-context-forge/jwt
# openssl genrsa -out ~/.config/mcp-context-forge/jwt/private.pem 4096
# openssl rsa -in ~/.config/mcp-context-forge/jwt/private.pem \
#   -pubout -out ~/.config/mcp-context-forge/jwt/public.pem
# chmod 600 ~/.config/mcp-context-forge/jwt/private.pem
# chmod 644 ~/.config/mcp-context-forge/jwt/public.pem
#
# Then update blueprint-config.json:
# {
#   "jwt_algorithm": "RS256"
# }
#
# ─────────────────────────────────────────────────────────────────────────────
# SETUP INSTRUCTIONS
# ─────────────────────────────────────────────────────────────────────────────
# 1. Copy this file:
#    cp mcp-context-forge-secrets.env.example \
#       ~/.config/mcp-context-forge/secrets.env
#
# 2. Generate secrets:
#    sed -i "s/REPLACE_WITH_RANDOM_64_CHAR_HEX_STRING/$(openssl rand -hex 32)/" \
#      ~/.config/mcp-context-forge/secrets.env
#    sed -i "s/REPLACE_WITH_STRONG_PASSWORD/$(openssl rand -base64 24)/" \
#      ~/.config/mcp-context-forge/secrets.env
#
# 3. Configure optional features (SSO, LLM Chat, etc.)
#
# 4. Secure the file:
#    chmod 600 ~/.config/mcp-context-forge/secrets.env
#
# 5. Start the service:
#    systemctl --user start mcp-context-forge.service
#
# ═════════════════════════════════════════════════════════════════════════════
