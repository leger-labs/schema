{# ═════════════════════════════════════════════════════════════════════════ #}
{# OPENWEBUI ENVIRONMENT - Auto-generated from blueprint-config.json         #}
{# This file demonstrates feature-centric configuration                      #}
{# All 200+ environment variables generated from 29 decision variables       #}
{# ═════════════════════════════════════════════════════════════════════════ #}

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 CORE CONFIGURATION (Always present)
# ═════════════════════════════════════════════════════════════════════════════

# Database
DATABASE_URL={{ openwebui.general.database_url }}

# LLM Connection
OPENAI_API_BASE_URL={{ openwebui.general.openai_api_base_url }}
OPENAI_API_KEY={{ openwebui.general.openai_api_key }}

# Security
WEBUI_SECRET_KEY={{ openwebui.general.webui_secret_key }}

# Branding
WEBUI_NAME={{ openwebui.general.webui_name }}
CUSTOM_NAME={{ openwebui.general.custom_name }}

# Authentication
WEBUI_AUTH={{ openwebui.general.webui_auth }}
ENABLE_SIGNUP={{ openwebui.general.enable_signup }}
DEFAULT_USER_ROLE={{ openwebui.general.default_user_role }}

# Logging
GLOBAL_LOG_LEVEL={{ openwebui.general.log_level }}

# ═════════════════════════════════════════════════════════════════════════════
# 📊 VECTOR DATABASE (Decision 17: Which vector DB?)
# ═════════════════════════════════════════════════════════════════════════════

VECTOR_DB={{ openwebui.providers.vector_db }}

{% if openwebui.providers.vector_db == "chroma" %}
# Chroma (Embedded)
CHROMA_TENANT={{ openwebui.vector_db_config.chroma.tenant }}
CHROMA_DATABASE={{ openwebui.vector_db_config.chroma.database }}

{% elif openwebui.providers.vector_db == "pgvector" %}
# PGVector (PostgreSQL extension)
PGVECTOR_DB_URL={{ openwebui.vector_db_config.pgvector.db_url }}

{% elif openwebui.providers.vector_db == "qdrant" %}
# Qdrant (Dedicated vector DB)
QDRANT_URI={{ openwebui.vector_db_config.qdrant.uri }}
QDRANT_GRPC_PORT={{ openwebui.vector_db_config.qdrant.grpc_port }}
QDRANT_PREFER_GRPC={{ openwebui.vector_db_config.qdrant.prefer_grpc }}
QDRANT_ON_DISK={{ openwebui.vector_db_config.qdrant.on_disk }}

{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🔍 RAG CONFIGURATION (Decision 1: Enable RAG? + Decision 18: Which embedding?)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.rag %}
# RAG Enabled
ENABLE_RAG=true

# RAG Embedding Engine
RAG_EMBEDDING_ENGINE={{ openwebui.providers.rag_embedding }}

{% if openwebui.providers.rag_embedding == "openai" %}
# OpenAI Embedding (via LiteLLM)
RAG_OPENAI_API_BASE_URL={{ openwebui.rag_embedding_config.openai.base_url }}
RAG_OPENAI_API_KEY={{ openwebui.rag_embedding_config.openai.api_key }}
RAG_EMBEDDING_MODEL={{ openwebui.rag_embedding_config.openai.model }}

{% elif openwebui.providers.rag_embedding == "ollama" %}
# Ollama Embedding
OLLAMA_BASE_URL={{ openwebui.rag_embedding_config.ollama.base_url }}
RAG_EMBEDDING_MODEL={{ openwebui.rag_embedding_config.ollama.model }}

{% endif %}

# RAG Settings
RAG_TOP_K={{ openwebui.general.rag_top_k }}
CHUNK_SIZE={{ openwebui.general.chunk_size }}
CHUNK_OVERLAP={{ openwebui.general.chunk_overlap }}

{% else %}
# RAG Disabled
ENABLE_RAG=false

{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 📄 CONTENT EXTRACTION (Decision 19: Which doc processor?)
# ═════════════════════════════════════════════════════════════════════════════

CONTENT_EXTRACTION_ENGINE={{ openwebui.providers.content_extraction }}

{% if openwebui.providers.content_extraction == "tika" %}
# Apache Tika
TIKA_SERVER_URL={{ openwebui.content_extraction_config.tika.server_url }}

{% elif openwebui.providers.content_extraction == "docling" %}
# Docling
DOCLING_SERVER_URL={{ openwebui.content_extraction_config.docling.server_url }}

{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🔍 WEB SEARCH (Decision 2: Enable? + Decision 21: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.web_search %}
# Web Search Enabled
ENABLE_RAG_WEB_SEARCH=true
ENABLE_WEB_SEARCH=true
RAG_WEB_SEARCH_ENGINE={{ openwebui.providers.web_search_engine }}

{% if openwebui.providers.web_search_engine == "searxng" %}
# SearXNG
SEARXNG_QUERY_URL={{ openwebui.web_search_config.searxng.query_url }}

{% elif openwebui.providers.web_search_engine == "tavily" %}
# Tavily
TAVILY_API_KEY={{ openwebui.web_search_config.tavily.api_key }}

{% endif %}

{% else %}
# Web Search Disabled
ENABLE_RAG_WEB_SEARCH=false
ENABLE_WEB_SEARCH=false

{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🎤 SPEECH-TO-TEXT (Decision 4: Enable? + Decision 24: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.speech_to_text %}
# STT Enabled
AUDIO_STT_ENGINE={{ openwebui.providers.stt_engine }}

{% if openwebui.providers.stt_engine == "openai" %}
# OpenAI Whisper (local whisper container)
AUDIO_STT_OPENAI_API_BASE_URL={{ openwebui.audio_config.stt.openai.base_url }}
AUDIO_STT_OPENAI_API_KEY={{ openwebui.audio_config.stt.openai.api_key }}
AUDIO_STT_MODEL={{ openwebui.audio_config.stt.openai.model }}

{% endif %}
{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🔊 TEXT-TO-SPEECH (Decision 5: Enable? + Decision 25: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.text_to_speech %}
# TTS Enabled
AUDIO_TTS_ENGINE={{ openwebui.providers.tts_engine }}

{% if openwebui.providers.tts_engine == "openai" %}
# OpenAI TTS (local edgetts container)
AUDIO_TTS_OPENAI_API_BASE_URL={{ openwebui.audio_config.tts.openai.base_url }}
AUDIO_TTS_OPENAI_API_KEY={{ openwebui.audio_config.tts.openai.api_key }}
AUDIO_TTS_MODEL={{ openwebui.audio_config.tts.openai.model }}
AUDIO_TTS_VOICE={{ openwebui.audio_config.tts.openai.voice }}

{% endif %}
{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 💻 CODE EXECUTION (Decision 6-7: Enable? + Decision 26-27: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.code_execution %}
# Code Execution Enabled
ENABLE_CODE_EXECUTION=true
CODE_EXECUTION_ENGINE={{ openwebui.providers.code_execution_engine }}

{% if openwebui.providers.code_execution_engine == "jupyter" %}
# Jupyter
JUPYTER_URL={{ openwebui.code_execution_config.jupyter.url }}
JUPYTER_AUTH_TYPE={{ openwebui.code_execution_config.jupyter.auth }}
JUPYTER_TIMEOUT={{ openwebui.code_execution_config.jupyter.timeout }}

{% endif %}
{% else %}
# Code Execution Disabled
ENABLE_CODE_EXECUTION=false

{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 REDIS CONFIGURATION
# ═════════════════════════════════════════════════════════════════════════════

REDIS_URL=redis://{{ infrastructure.services.openwebui_redis.hostname }}:{{ infrastructure.services.openwebui_redis.port }}/2
REDIS_KEY_PREFIX=open-webui

{% if openwebui.features.websocket_support %}
ENABLE_WEBSOCKET_SUPPORT=true
WEBSOCKET_MANAGER=redis
WEBSOCKET_REDIS_URL=redis://{{ infrastructure.services.openwebui_redis.hostname }}:{{ infrastructure.services.openwebui_redis.port }}/3
{% else %}
ENABLE_WEBSOCKET_SUPPORT=false
{% endif %}

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 TASK MODELS (AI Enhancements)
# ═════════════════════════════════════════════════════════════════════════════

{% if openwebui.features.title_generation %}
ENABLE_TITLE_GENERATION=true
TASK_MODEL_TITLE={{ openwebui.general.task_models.title_generation }}
{% endif %}

{% if openwebui.features.tags_generation %}
ENABLE_TAGS_GENERATION=true
TASK_MODEL_TAGS={{ openwebui.general.task_models.tags_generation }}
{% endif %}

# Query generation
ENABLE_RETRIEVAL_QUERY_GENERATION=true
TASK_MODEL_QUERY={{ openwebui.general.task_models.query_generation }}

# ═════════════════════════════════════════════════════════════════════════════
# ✅ SUMMARY
# ═════════════════════════════════════════════════════════════════════════════
# Enabled Features:
{% for key, value in openwebui.features %}
{%- if value %}
#   ✓ {{ key }}
{% endif -%}
{% endfor %}
#
# Selected Providers:
{% for key, value in openwebui.providers %}
#   → {{ key }}: {{ value }}
{% endfor %}
