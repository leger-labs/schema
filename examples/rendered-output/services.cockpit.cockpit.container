# ═════════════════════════════════════════════════════════════════════════════
# 🖥️   v
# Release: 
# 
#
# Note: Hostname  means this
#       container represents the actual host system in the dashboard
# ═════════════════════════════════════════════════════════════════════════════

[Unit]
Description=
After=network-online.target llm.network.service
Requires=llm.network.service
# Ensure podman socket is available for container monitoring
After=podman.socket
Wants=podman.socket

[Container]
Image=
AutoUpdate=registry
ContainerName=
Hostname=

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK - Both llm network AND published port
# ═════════════════════════════════════════════════════════════════════════════
Network=llm.network

# Published port for Caddy access


# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUMES - Full system access
# ═════════════════════════════════════════════════════════════════════════════

# Mount host root for full system visibility
Volume=/:/host:ro

# Podman socket for container management
Volume=/run/user/%U/podman/podman.sock:/run/podman/podman.sock:Z

# Systemd socket for service management (read-only)
Volume=/run/systemd:/run/systemd:ro

# User systemd for user service monitoring
Volume=/run/user/%U/systemd:/run/user/systemd:ro

# Cockpit configuration
Volume=%h/.config/cockpit/cockpit.conf:/etc/cockpit/cockpit.conf:ro,Z

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 SECURITY & PRIVILEGES
# ═════════════════════════════════════════════════════════════════════════════

# Privileged mode for full system access
PodmanArgs=--privileged

# Use host PID namespace to see all processes
PodmanArgs=--pid=host

# Security label to allow system access
PodmanArgs=--security-opt=label=disable

# ═════════════════════════════════════════════════════════════════════════════
# 🌍 ENVIRONMENT
# ═════════════════════════════════════════════════════════════════════════════

# Cockpit runs as container
Environment=COCKPIT_IN_CONTAINER=true

# Disable authentication (Tailscale provides auth)
Environment=COCKPIT_ALLOW_UNENCRYPTED=true

# Container name for self-identification
Environment=NAME=

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 EXECUTION
# ═════════════════════════════════════════════════════════════════════════════

# Use the container's label-run script (standard Cockpit approach)
Exec=/container/label-run

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=curl -f http://localhost:/ || exit 1
HealthInterval=30s
HealthTimeout=5s
HealthRetries=3
HealthStartPeriod=30s


# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
[Service]
Slice=llm.slice
TimeoutStartSec=300
Restart=always
RestartSec=10


[Install]
WantedBy=default.target
